---
export interface Props {
  headings: Array<{
    depth: number;
    text: string;
    slug: string;
  }>;
}

const { headings } = Astro.props;
---

<nav class="table-of-contents">
  <h2 class="toc-title">Table of Contents</h2>
  <ul class="toc-list">
    {
      headings.map((heading) => (
        <li class={`toc-item depth-${heading.depth}`}>
          <a href={`#${heading.slug}`} class="toc-link">
            {heading.text}
          </a>
        </li>
      ))
    }
  </ul>
</nav>

<script>
  document.addEventListener("astro:page-load", () => {
    const toc = document.querySelector(".table-of-contents");
    if (!toc) return;

    const links = toc.querySelectorAll(".toc-link");
    const headings = Array.from(links)
      .map((link) => {
        const href = link.getAttribute("href");
        if (!href) return null;
        return document.querySelector(href);
      })
      .filter(Boolean) as HTMLElement[];

    // Highlight active section
    function highlightActiveSection() {
      let current = "";

      headings.forEach((heading) => {
        const rect = heading.getBoundingClientRect();
        if (rect.top <= 100) {
          current = heading.id;
        }
      });

      links.forEach((link) => {
        link.classList.remove("active");
        const href = link.getAttribute("href");
        if (href === `#${current}`) {
          link.classList.add("active");
        }
      });
    }

    // Smooth scroll
    links.forEach((link) => {
      link.addEventListener("click", (e) => {
        e.preventDefault();
        const href = link.getAttribute("href");
        if (!href) return;

        const target = document.querySelector(href);
        if (target) {
          const yOffset = -80;
          const y =
            target.getBoundingClientRect().top + window.pageYOffset + yOffset;
          window.scrollTo({ top: y, behavior: "smooth" });
        }
      });
    });

    window.addEventListener("scroll", highlightActiveSection);
    highlightActiveSection();
  });
</script>

<style>
  .table-of-contents {
    position: sticky;
    top: 100px;
    padding: 1.5rem;
    border: 1px solid var(--border);
    border-radius: 8px;
    background: var(--surface);
    max-height: calc(100vh - 150px);
    overflow-y: auto;
  }

  .toc-title {
    margin: 0 0 1rem 0;
    font-size: 1rem;
    text-transform: uppercase;
    opacity: 0.7;
    font-weight: 600;
  }

  .toc-list {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .toc-item {
    margin-bottom: 0.5rem;
  }

  .toc-item.depth-2 {
    padding-left: 0;
  }

  .toc-item.depth-3 {
    padding-left: 1rem;
  }

  .toc-item.depth-4 {
    padding-left: 2rem;
  }

  .toc-link {
    display: block;
    padding: 0.5rem 0.75rem;
    text-decoration: none;
    border-radius: 4px;
    transition: all 0.2s ease;
    font-size: 0.875rem;
    line-height: 1.4;
  }

  .toc-link:hover {
    background: var(--hover-bg);
  }

  .toc-link.active {
    background: var(--hover-bg);
    font-weight: 600;
    border-left: 3px solid var(--primary);
    padding-left: calc(0.75rem - 3px);
  }

  @media (max-width: 1024px) {
    .table-of-contents {
      position: relative;
      top: 0;
      margin-bottom: 2rem;
    }
  }
</style>
