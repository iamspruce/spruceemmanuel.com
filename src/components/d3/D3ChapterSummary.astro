---
export interface Props {
  chapterSlug: string;
  chapterTitle: string;
  nextChapter?: { href: string; title: string } | null;
}

const { chapterSlug, chapterTitle, nextChapter } = Astro.props;
---

<div class="chapter-summary" data-chapter-slug={chapterSlug}>
  <div class="summary-content">
    <h2 class="summary-title">Chapter Complete!</h2>
    <p class="summary-subtitle">{chapterTitle}</p>

    <div class="quiz-summary" id="quiz-summary">
      <div class="summary-loading">Calculating your performance...</div>
    </div>

    <div class="summary-actions">
      <button class="summary-btn review-btn" id="review-chapter-btn">
        Review Chapter
      </button>
      {
        nextChapter && (
          <a href={nextChapter.href} class="summary-btn next-chapter-btn">
            Continue to Next Chapter →
          </a>
        )
      }
    </div>
  </div>
</div>

<script>
  import { courseProgressManager } from "../../utils/courseProgress";

  document.addEventListener("astro:page-load", () => {
    const summaryEl = document.querySelector(".chapter-summary");
    if (!summaryEl) return;

    const chapterSlug = summaryEl.getAttribute("data-chapter-slug");
    if (!chapterSlug) return;

    const quizSummaryEl = document.getElementById("quiz-summary");
    const reviewBtn = document.getElementById("review-chapter-btn");

    // Calculate and display quiz summary
    courseProgressManager.calculateChapterQuizSummary(chapterSlug);
    const summary = courseProgressManager.getChapterQuizSummary(chapterSlug);

    if (quizSummaryEl && summary) {
      const percentage = summary.percentage;
      let resultClass = "success";
      let resultTitle = "Excellent Work! 🎉";
      let resultMessage = `You scored ${percentage.toFixed(0)}% on the chapter quizzes. You have a strong understanding of the material!`;

      if (percentage < 50) {
        resultClass = "fail";
        resultTitle = "Keep Practicing 📚";
        resultMessage = `You scored ${percentage.toFixed(0)}% on the chapter quizzes. We recommend reviewing the chapter material and retaking the quizzes to strengthen your understanding.`;
      } else if (percentage < 80) {
        resultClass = "pass";
        resultTitle = "Good Job! 👍";
        resultMessage = `You scored ${percentage.toFixed(0)}% on the chapter quizzes. You passed, but consider reviewing some sections to improve your mastery.`;
      }

      quizSummaryEl.innerHTML = `
        <div class="summary-result ${resultClass}">
          <h3 class="result-title">${resultTitle}</h3>
          <div class="result-stats">
            <div class="stat-item">
              <span class="stat-label">Total Quizzes</span>
              <span class="stat-value">${summary.totalQuizzes}</span>
            </div>
            <div class="stat-item">
              <span class="stat-label">Passed</span>
              <span class="stat-value success">${summary.totalPassed}</span>
            </div>
            <div class="stat-item">
              <span class="stat-label">Failed</span>
              <span class="stat-value fail">${summary.totalFailed}</span>
            </div>
            <div class="stat-item">
              <span class="stat-label">Score</span>
              <span class="stat-value">${percentage.toFixed(0)}%</span>
            </div>
          </div>
          <p class="result-message">${resultMessage}</p>
        </div>
      `;
    } else if (quizSummaryEl) {
      quizSummaryEl.innerHTML = `
        <div class="summary-result">
          <p>No quiz data available for this chapter.</p>
        </div>
      `;
    }

    // Review chapter button
    reviewBtn?.addEventListener("click", () => {
      window.scrollTo({ top: 0, behavior: "smooth" });

      // Open progress panel to show chapter lessons
      const progressBtn = document.getElementById("course-progress-btn");
      progressBtn?.click();
    });
  });
</script>

<style>
  .chapter-summary {
    margin: 3rem 0;
    padding: 2rem;
    border: 2px solid var(--border);
    border-radius: 12px;
    background: var(--surface);
  }

  .summary-content {
    max-width: 800px;
    margin: 0 auto;
    text-align: center;
  }

  .summary-title {
    font-size: 2rem;
    margin-bottom: 0.5rem;
  }

  .summary-subtitle {
    font-size: 1.25rem;
    opacity: 0.8;
    margin-bottom: 2rem;
  }

  .quiz-summary {
    margin: 2rem 0;
  }

  .summary-loading {
    padding: 2rem;
    opacity: 0.7;
  }

  .summary-result {
    padding: 2rem;
    border-radius: 8px;
    background: var(--background);
  }

  .summary-result.success {
    border: 2px solid #22c55e;
  }

  .summary-result.pass {
    border: 2px solid #f59e0b;
  }

  .summary-result.fail {
    border: 2px solid #ef4444;
  }

  .result-title {
    font-size: 1.5rem;
    margin-bottom: 1.5rem;
  }

  .result-stats {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
    gap: 1.5rem;
    margin: 2rem 0;
    padding: 1.5rem;
    background: var(--surface);
    border-radius: 8px;
  }

  .stat-item {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .stat-label {
    font-size: 0.875rem;
    opacity: 0.7;
    text-transform: uppercase;
  }

  .stat-value {
    font-size: 1.75rem;
    font-weight: 700;
  }

  .stat-value.success {
    color: #22c55e;
  }

  .stat-value.fail {
    color: #ef4444;
  }

  .result-message {
    font-size: 1rem;
    line-height: 1.6;
    margin-top: 1.5rem;
    opacity: 0.9;
  }

  .summary-actions {
    display: flex;
    gap: 1rem;
    justify-content: center;
    flex-wrap: wrap;
    margin-top: 2rem;
  }

  .summary-btn {
    padding: 1rem 2rem;
    border: 1px solid var(--border);
    border-radius: 8px;
    font-weight: 600;
    font-size: 1rem;
    cursor: pointer;
    transition: all 0.2s ease;
    text-decoration: none;
    display: inline-block;
  }

  .review-btn {
    background: var(--background);
  }

  .review-btn:hover {
    background: var(--hover-bg);
    transform: translateY(-2px);
  }

  .next-chapter-btn {
    background: var(--primary);
    color: white;
    border-color: var(--primary);
  }

  .next-chapter-btn:hover {
    opacity: 0.9;
    transform: translateY(-2px);
  }

  @media (max-width: 640px) {
    .summary-actions {
      flex-direction: column;
    }

    .summary-btn {
      width: 100%;
    }

    .result-stats {
      grid-template-columns: repeat(2, 1fr);
    }
  }
</style>
