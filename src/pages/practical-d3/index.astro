---
import D3SiteLayout from "../../layouts/D3jsLayout.astro";
import { getCourseStructure } from "../../utils/courseUtils";
import ElectronRing from "../../components/ElectronRing.astro";

const myRings = [
  {
    rotation: 0,
    color: "#00f3ff",
    speed: 0.5,
    electrons: [
      { angle: 0, link: "/page-1", label: "Go to Page 1" },
      { angle: 180, link: "/page-2", label: "Go to Page 2" },
    ],
  },
  {
    rotation: 60,
    color: "#ff00ea",
    speed: -0.8,
    electrons: [{ angle: 90, link: "/page-3", label: "Go to Page 3" }],
  },
  {
    rotation: 120,
    color: "#ffea00",
    speed: 0.6,
    electrons: [
      { angle: 45, link: "/page-4", label: "Go to Page 4" },
      { angle: 135, link: "/page-5", label: "Go to Page 5" },
      { angle: 225, link: "/page-6", label: "Go to Page 6" },
      { angle: 315, link: "/page-7", label: "Go to Page 7" },
    ],
  },
];

const courseStructure = await getCourseStructure();
---

<D3SiteLayout
  title="D3.js Course"
  description="Learn D3.js from the ground up with interactive lessons and quizzes"
  chapterSlug=""
  lessonSlug=""
>
  <section>
    <header>
      <hgroup>
        <h1>learn D3.js Practically</h1>
        <h2>A Practical hands on course to learn D3</h2>
      </hgroup>
    </header>
    <nav class="central-featured" aria-label="D3.js Course Topics">
      <ul>
        <li>
          <a href="#intro" title="Introduction to D3.js">
            <strong>Introduction</strong>
            <small>Get started</small>
          </a>
        </li>
        <li>
          <a href="#bar-chart" title="Bar Chart">
            <strong>Bar Chart</strong>
            <small>Scales & axes</small>
          </a>
        </li>
        <li>
          <a href="#line-chart" title="Line Chart">
            <strong>Line Chart</strong>
            <small>Trends & paths</small>
          </a>
        </li>
        <li>
          <a href="#pie-chart" title="Pie Chart">
            <strong>Pie Chart</strong>
            <small>Arcs & colors</small>
          </a>
        </li>
        <li>
          <a href="#scatterplot" title="Scatterplot">
            <strong>Scatterplot</strong>
            <small>Dots & data</small>
          </a>
        </li>
        <li>
          <a href="#bubble-chart" title="Bubble Chart">
            <strong>Bubble Chart</strong>
            <small>Size & color</small>
          </a>
        </li>
        <li>
          <a href="#hierarchical" title="Hierarchical Charts">
            <strong>Hierarchical</strong>
            <small>Tree & sunburst</small>
          </a>
        </li>
        <li>
          <a href="#geo" title="Geographical Maps">
            <strong>Geo Maps</strong>
            <small>World data</small>
          </a>
        </li>
        <li>
          <a href="#animation" title="Animation & Interaction">
            <strong>Animation</strong>
            <small>Motion & events</small>
          </a>
        </li>
        <li>
          <a href="#dashboard" title="Interactive Dashboard">
            <strong>Dashboard</strong>
            <small>All in one</small>
          </a>
        </li>
      </ul>
      <ElectronRing text="D3.js" rings={myRings} />
      <a style="display: block; margin-block-start: -30px;" href="http://"
        >Get Started</a
      >
    </nav>

    <div class="outline-wrapper">
      <button class="toggle-btn" id="toggleOutline" aria-expanded="false">
        View The Course Outline
        <!-- collapsed icon (default) -->
        <svg
          viewBox="0 0 24 24"
          class="icon-collapsed"
          width="20"
          height="20"
          xmlns="http://www.w3.org/2000/svg"
          fill-rule="evenodd"
          clip-rule="evenodd"
        >
          <path
            d="M23.245 4l-11.245 14.374-11.219-14.374-.781.619 12 15.381 12-15.391-.755-.609z"
          ></path>
        </svg>

        <!-- expanded icon (shown when aria-expanded="true") -->
        <svg
          viewBox="0 0 24 24"
          class="icon-expanded"
          width="20"
          height="20"
          xmlns="http://www.w3.org/2000/svg"
          fill-rule="evenodd"
          clip-rule="evenodd"
        >
          <path
            d="M23.245 20l-11.245-14.374-11.219 14.374-.781-.619 12-15.381 12 15.391-.755.609z"
          ></path>
        </svg>
      </button>

      <div class="outline-content" id="outlineContent">
        <table>
          <thead>
            <tr>
              <th>Chapter</th>
              <th>Lessons</th>
            </tr>
          </thead>
          <tbody>
            {
              courseStructure.map((chapter) => (
                <tr>
                  <td class="chapter-cell">
                    <strong>{chapter.title}</strong>
                  </td>
                  <td class="lessons-cell">
                    <ul>
                      {chapter.lessons.map((lesson) => (
                        <li>
                          <a href={lesson.href}>{lesson.title}</a>
                        </li>
                      ))}
                    </ul>
                  </td>
                </tr>
              ))
            }
          </tbody>
        </table>
      </div>
    </div>
  </section>
</D3SiteLayout>

<style>
  :global(section) {
    padding: var(--space-2xs) var(--space-3xs);
    margin: 0 auto;
    display: flex;
    flex-direction: column;
    gap: var(--space-3xs);
    align-items: center;
  }

  header {
    text-align: center;
    margin-block: var(--space-s);
  }

  hgroup h1 {
    font-size: 2.5rem;
    margin-bottom: 0.5rem;
  }

  hgroup h2 {
    font-size: 1.5rem;
    color: var(--gray-11);
  }

  .central-featured {
    position: relative;
    height: calc(var(--space-2xl-3xl) * 2.6);
    min-height: 400px;
    width: calc(var(--space-2xl-3xl) * 4.6);
    min-width: 300px;
    max-width: 100%;
    margin: 0 auto;
    text-align: center;
  }

  .central-featured > :global(.electron-container) {
    position: absolute;
    top: 50%;
    left: 50%;
    z-index: 1;
    transform: translate(-50%, -80%);
  }

  .central-featured ul {
    position: relative;
    list-style: none;
    margin: 0;
    padding: 0;
    width: 100%;
    height: 100%;
    display: block;
  }

  .central-featured li {
    position: absolute;
  }

  .central-featured li:nth-child(1) {
    top: 0%;
    right: 60%;
  }
  .central-featured li:nth-child(2) {
    top: 0%;
    left: 60%;
  }
  .central-featured li:nth-child(3) {
    top: 20%;
    left: 70%;
  }
  .central-featured li:nth-child(4) {
    top: 20%;
    right: 70%;
  }
  .central-featured li:nth-child(5) {
    top: 40%;
    right: 72%;
  }
  .central-featured li:nth-child(6) {
    top: 40%;
    left: 72%;
  }
  .central-featured li:nth-child(7) {
    top: 60%;
    right: 70%;
  }
  .central-featured li:nth-child(8) {
    top: 60%;
    left: 70%;
  }
  .central-featured li:nth-child(9) {
    top: 80%;
    right: 60%;
  }
  .central-featured li:nth-child(10) {
    top: 80%;
    left: 60%;
  }

  .central-featured strong {
    display: block;
    font-size: 1rem;
    font-weight: 600;
  }

  .central-featured small {
    display: block;
    font-size: 0.8rem;
    color: var(--gray-11);
  }

  /* Outline wrapper - contains button and expanding content */
  .outline-wrapper {
    width: 100%;
    max-width: 1200px;
    margin-block-start: var(--space-s);
    display: flex;
    flex-direction: column;
    align-items: center;
    position: relative;
  }

  /* Toggle button */
  .toggle-btn {
    padding: var(--space-3xs) var(--space-m);
    font-size: 1.1rem;
    font-weight: 600;
    color: var(--gray-12);
    background: var(--gray-6);
    border: none;
    border-radius: var(--radius-xs);
    cursor: pointer;
    box-shadow: var(--shadow-m);
    transition: box-shadow 0.3s ease;
    position: relative;
    z-index: 2;
    display: inline-flex;
    align-items: center;
    gap: var(--space-3xs);
  }

  .toggle-btn svg {
    fill: var(--gray-11);
  }

  .toggle-btn::before,
  .toggle-btn::after {
    content: "";
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    height: 2px;
    background: linear-gradient(90deg, var(--gray-7), var(--gray-9));
    width: 0;
    transition: width 0.6s ease-out;
  }

  .toggle-btn::before {
    right: 100%;
    margin-right: 2px;
  }

  .toggle-btn::after {
    left: 100%;
    margin-left: 2px;
  }

  .toggle-btn[aria-expanded="true"]::before,
  .toggle-btn[aria-expanded="true"]::after {
    width: 300px;
  }

  .toggle-btn:hover {
    box-shadow: var(--shadow-l);
  }

  .toggle-btn .icon-expanded {
    display: none;
  }
  .toggle-btn[aria-expanded="true"] .icon-collapsed {
    display: none;
  }
  .toggle-btn[aria-expanded="true"] .icon-expanded {
    display: inline;
  }
  .toggle-btn svg {
    vertical-align: middle;
  }

  /* Outline content - the expanding table */
  .outline-content {
    width: 100%;
    max-width: 918px;
    display: grid;
    grid-template-rows: 0fr;
    transition: grid-template-rows 0.8s ease-out;
    margin-top: calc(-1.5 * var(--space-s));
    padding-top: var(--space-s);
  }

  .toggle-btn[aria-expanded="true"] ~ .outline-content {
    grid-template-rows: 1fr;
  }

  .outline-content > table {
    overflow: hidden;
    opacity: 0;
    transition: opacity 0.5s ease-out 0.2s;
  }

  .toggle-btn[aria-expanded="true"] ~ .outline-content > table {
    opacity: 1;
  }

  /* Table styles */
  table {
    width: 100%;
    border-collapse: collapse;
    background: var(--gray-6);
    border-radius: 2px;
    box-shadow: var(--shadow-m);
  }

  thead {
    border-bottom: 1px solid var(--gray-4);
  }

  th {
    padding: var(--space-xs) var(--space-s);
    text-align: left;
    font-weight: 600;
    font-size: 1.1rem;
    color: var(--gray-12);
    border-right: 1px solid var(--gray-4);
  }

  td {
    padding: var(--space-s);
    border-right: 1px solid var(--gray-4);
    vertical-align: top;
  }

  tr:last-child td {
    border-bottom: none;
  }

  .chapter-cell {
    width: 30%;
    font-size: 1rem;
  }

  .chapter-cell strong {
    color: var(--gray-12);
  }

  .lessons-cell {
    width: 70%;
  }

  .lessons-cell ul {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    flex-direction: column;
    gap: var(--space-2xs);
  }

  .lessons-cell li {
    padding: var(--space-3xs) var(--space-2xs);
    border-radius: var(--radius-xs);
    transition: background-color 0.2s ease;
  }

  .lessons-cell li:hover {
    background-color: var(--gray-4);
  }

  .lessons-cell a {
    color: var(--pink-11);
    text-decoration: none;
    transition: color 0.2s ease;
  }

  .lessons-cell a:hover {
    color: var(--gray-12);
    text-decoration: underline;
  }

  @media (max-width: 700px) {
    table {
      font-size: 0.9rem;
    }

    th,
    td {
      padding: var(--space-2xs) var(--space-xs);
    }

    .chapter-cell {
      width: 35%;
    }

    .lessons-cell {
      width: 65%;
    }

    .toggle-btn[aria-expanded="true"]::before,
    .toggle-btn[aria-expanded="true"]::after {
      width: 100px;
    }
  }
</style>

<script>
  const btn = document.getElementById("toggleOutline");

  btn?.addEventListener("click", () => {
    const isExpanded = btn.getAttribute("aria-expanded") === "true";
    btn.setAttribute("aria-expanded", String(!isExpanded));
  });
</script>
